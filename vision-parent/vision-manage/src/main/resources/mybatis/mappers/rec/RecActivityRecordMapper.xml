<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vision.mapper.rec.RecActivityRecordMapper">


	<!-- 基于用户名/电话的查询条件sql引用语句 -->
	<sql id="queryWhereId">
		<where>
		 	<!-- org_id=#{orgId} -->
		 	org_id in 
		 	<foreach collection="orgIds" index="index" item="item" open="(" separator="," close=")">
		    	#{item}
			</foreach>
			<!-- name条件 -->
			<if test="name!=null and name!=''">
				and name like concat("%",#{name},"%")
			</if>
		</where>
	</sql>

	<delete id="deleteActivityRecordByid">	
		delete from rec_pay_user where id=#{id}
	</delete>
	
	
	<select id="findRecActivityRecordById" resultType="com.vision.pojo.rec.RecPayUser">
		select * from rec_pay_user where id=#{id}
	</select>
	
	
	<select id="getPageCount" resultType="int" parameterType="java.util.List" >
		select count(*) from rec_pay_user <include refid="queryWhereId" />
	</select>
	
	<select id="findLimitRecActivityRecords" resultType="com.vision.pojo.rec.RecPayUser" parameterType="java.util.List">
		select * from rec_pay_user <include refid="queryWhereId" />
		limit #{startIndex},#{pageSize}
	</select>
	
	<select id="getLastRechargeTime" resultType="com.vision.pojo.rec.RecPayUser">
		select create_time from rec_pay_user where customer_id=#{customerId} order by create_time desc limit 0,1
	</select>
	
	<select id="insertActivityRecord" resultType="int">
		insert into rec_pay_user values(
			null,
			#{userId},
			#{orgId},
			#{name},
			#{customerId},
			#{rechargeType},
			#{money},
			#{rechargeAmount},
			#{presentedAmount},
			#{practiceTimes},
			#{lastPayTime},
			#{createTime},
			#{modifiedTime}
			
		)
	</select>
	
	<select id="findRecActivityRecordByCustomerId" resultType="com.vision.pojo.rec.RecPayUser">
		select * from rec_pay_user where customer_id = #{customerId}
	</select>
	
	<delete id="deleteAllRecPayUserByIds"  parameterType="long" >	
		delete from rec_pay_user where id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
		    #{item}
		</foreach>		
	</delete>
	
</mapper>